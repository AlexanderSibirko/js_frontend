(1) Введение в Vue.js (1)

-- Введение
Зачем нужны ферйморки:
Возможные минусы голого JS:
1) создание переменных (раскидано по всему коду, констатны все фулл заклавными буквами)
2) Клик по кнопке - в обычном js создаёшь ссылку, класс, добавляешь эвент листнер и т.д. (...) - все это обрабатывается логикой скриптов
3) необходимость упростить создание сложных приложений путём их разбиения на логические и функциональные блоки
4) обеспечение воспроизводимости поведения - при выполнении одних и тех же действий, мы должны получать тот же самый результат
5) обработка асинхронных процессов, которые могут выполняться параллельно, например загрузка данных и обработка других действий пользователя...

Популярные фреймворки на сегодня React, Angular, Vue... (все похожи, если что потом будет легче изучить другой фреймворк)
Vue проще чем React на старте! (для начала удобнее)

Библиотека то что подключается как


-- Установка
Простой способ ссылочно, в реальных проектах лучше скачивать и подключать как библиотеку!
<!-- версия для разработки, отображает полезные предупреждения в консоли -->
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
<!-- production-версия, оптимизированная для размера и скорости -->
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>


-- Шаблоны
{{ param }} - при этом реактивное связывание


-- События
v-on:event="code/function"
v-on:event.stop - останавливает эвент, как prevent default
v-html="paramName" - param записываем в бэктиках ``, и тогда создёт html

-- Условия
v-if="condition" - добавляет элемент только если выполняется условие
v-else="condition" - добавляет элемент только если выполняется условие
v-show="condition" - при первой выполнении добавляет элемент, а потом лишь меняет ему параметр display: none

-- Итоги
